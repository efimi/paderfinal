'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var EffectInput = {render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.type === 'isao')?_c('span',{class:_vm.inputClass},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.innerValue),expression:"innerValue"}],ref:"input",staticClass:"effect-input__field",attrs:{"name":_vm.name,"readonly":_vm.readonly,"type":"text"},domProps:{"value":(_vm.innerValue)},on:{"input":function($event){if($event.target.composing){ return; }_vm.innerValue=$event.target.value;}}}),_vm._v(" "),_c('label',{staticClass:"effect-input__label",attrs:{"for":"","data-content":_vm.label},on:{"click":_vm.handleLabelClick}},[_c('span',{staticClass:"effect-input__label-content"},[_vm._v(" "+_vm._s(_vm.label)+" ")])])]):(_vm.type === 'madoka')?_c('span',{class:_vm.inputClass},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.innerValue),expression:"innerValue"}],ref:"input",staticClass:"effect-input__field",attrs:{"type":"text"},domProps:{"value":(_vm.innerValue)},on:{"input":function($event){if($event.target.composing){ return; }_vm.innerValue=$event.target.value;}}}),_vm._v(" "),_c('label',{staticClass:"effect-input__label",attrs:{"for":""},on:{"click":_vm.handleLabelClick}},[_c('svg',{staticClass:"graphic",attrs:{"width":"100%","height":"100%","viewBox":"0 0 404 77","preserveAspectRatio":"none"}},[_c('path',{attrs:{"d":"m0, 0l404, 0l0, 77l-404, 0l0, -77z"}})]),_vm._v(" "),_c('span',{staticClass:"effect-input__label-content"},[_vm._v(" "+_vm._s(_vm.label)+" ")])])]):_c('span',{class:_vm.inputClass},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.innerValue),expression:"innerValue"}],ref:"input",staticClass:"effect-input__field",attrs:{"type":"text"},domProps:{"value":(_vm.innerValue)},on:{"input":function($event){if($event.target.composing){ return; }_vm.innerValue=$event.target.value;}}}),_vm._v(" "),_c('label',{staticClass:"effect-input__label",attrs:{"for":""},on:{"click":_vm.handleLabelClick}},[_c('span',{staticClass:"effect-input__label-content"},[_vm._t("label",[_vm._v(" "+_vm._s(_vm.label)+" ")])],2)])])},staticRenderFns: [],
  name: 'EffectInput',

  props: {
    value: String,
    label: String,
    name: String,
    readonly: Boolean,

    type: {
      type: String,
      default: 'haruki',
    },
  },

  computed: {
    inputClass () {
      return {
        'effect-input': true,
        'effect-input--filled': !!this.innerValue,
        [`effect-input--${this.type}`]: true,
      }
    },
    innerValue: {
      get () {
        return this.value
      },
      set (value) {
        this.$emit('input', value);
      },
    },
  },

  methods: {
    handleLabelClick () {
      this.$refs.input.focus();
    },
  },
};

var index = {
  install (Vue) {
    Vue.component(EffectInput.name, EffectInput);
  },
};

exports.EffectInput = EffectInput;
exports['default'] = index;
